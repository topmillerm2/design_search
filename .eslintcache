[{"/Users/michaeltopmiller/Desktop/designSearch/src/components/Pagination.js":"1","/Users/michaeltopmiller/Desktop/designSearch/src/components/App.js":"2"},{"size":2213,"mtime":1611520626259,"results":"3","hashOfConfig":"4"},{"size":4119,"mtime":1611520747238,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k6lexz",{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaeltopmiller/Desktop/designSearch/src/components/Pagination.js",["10","11"],"/Users/michaeltopmiller/Desktop/designSearch/src/components/App.js",[],{"ruleId":"12","severity":1,"message":"13","line":18,"column":19,"nodeType":"14","endLine":23,"endColumn":4},{"ruleId":"12","severity":1,"message":"15","line":23,"column":6,"nodeType":"16","endLine":23,"endColumn":32,"suggestions":"17"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["18"],{"desc":"19","fix":"20"},"Update the dependencies array to be: [currentPage, onPagePress, setIsLoading]",{"range":"21","text":"22"},[463,489],"[currentPage, onPagePress, setIsLoading]"]